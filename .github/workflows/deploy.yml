name: Infra Build & Deploy Weather App

on:
  push:
    branches:
      - main

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Initialize Terraform
        run: terraform init

      - name: Run Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan

  apply:
    name: Terraform Apply (Manual Approval)
    runs-on: ubuntu-latest
    needs: plan
    environment: terraform-apply  # Triggers manual approval

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan

      - name: Apply Terraform Changes
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: terraform apply tfplan


      - name: Save VM Public IP as Artifact
        run: |
          echo "VM_IP=$(terraform output -raw vm_public_ip)" > vm_ip.txt
        shell: bash

      - name: Upload VM IP Artifact
        uses: actions/upload-artifact@v3
        with:
          name: vm-ip
          path: vm_ip.txt

  deploy:
    name: Deploy Weather App
    runs-on: ubuntu-latest
    needs: apply

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download VM IP from Artifact
        uses: actions/download-artifact@v3
        with:
          name: vm-ip

      - name: Read VM IP
        run: echo "VM_IP=$(cat vm_ip.txt)" >> $GITHUB_ENV

      - name: Retrieve SSH Key from Azure Key Vault
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy Python App to Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem azureuser@${{ env.VM_IP }} << 'EOF'
          sudo apt update && sudo apt install -y python3 python3-pip
          pip3 install flask requests gunicorn
          nohup gunicorn -w 4 -b 0.0.0.0:5000 app:app &
          EOF
